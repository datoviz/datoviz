/*************************************************************************************************/
/*  Debugging macros                                                                             */
/*************************************************************************************************/

#ifndef DVZ_HEADER_DEBUG
#define DVZ_HEADER_DEBUG



/*************************************************************************************************/
/*  Includes                                                                                     */
/*************************************************************************************************/

#include <stddef.h>

#include <b64/b64.h>



/*************************************************************************************************/
/*  Macros                                                                                       */
/*************************************************************************************************/

#define Pu(x) printf("%s=%" PRIu64 "\n", (#x), (x));
#define Pd(x) printf("%s=%" PRId64 "\n", (#x), (x));
#define Pf(x) printf("%s=%.8f\n", (#x), (double)(x));
#define Ps(x) printf("%s=%s\n", (#x), (x));



/*************************************************************************************************/
/*  Debugging functions                                                                          */
/*************************************************************************************************/

static bool dvz_is_empty(size_t size, const uint8_t* buf)
{
    return buf[0] == 0 && !memcmp(buf, buf + 1, size - 1);
}



static void dvz_show_base64(size_t size, const void* buffer)
{
    char* encoded = b64_encode((const unsigned char*)buffer, size);
    printf("base64 is: %s\n", encoded);
    free(encoded);
}



#endif
